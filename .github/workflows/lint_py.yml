name: lint_python
on: [pull_request, push]
jobs:
  lint_python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - run: pip install bandit black codespell flake8 isort mypy pytest pyupgrade safety
      - run: bandit --recursive --skip B101 . || true  # B101 is assert statements
      - run: black --check . || true
      - run: codespell || true  # --ignore-words-list="" --skip=""
      - run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - run: flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --show-source --statistics
      - run: isort --check-only --profile black . || true
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt || true
      - run: mypy --install-types --non-interactive . || true
      - run: pytest . || true
      - run: pytest --doctest-modules . || true
      - run: shopt -s globstar && pyupgrade --py36-plus **/*.py || true
      # - run: safety check
  analyze:
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - run: python -m pip install --upgrade pip

      - name: Set up CodeQL environment
        uses: github/codeql-action/init@v2
        with:
          languages: python

      - name: Build CodeQL database
        uses: github/codeql-action/analyze@v2
        with:
          database: codeql-db
          language: python
          # Add any additional sources or queries as needed
          # sources: directory1, directory2
          # queries: query1.ql, query2.ql

      - name: Upload CodeQL results
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to CodeQL analysis results in SARIF format
          sarif_file: codeql-results.sarif